#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
${symbol_pound}  Licensed to the Apache Software Foundation (ASF) under one
${symbol_pound}  or more contributor license agreements.  See the NOTICE file
${symbol_pound}  distributed with this work for additional information
${symbol_pound}  regarding copyright ownership.  The ASF licenses this file
${symbol_pound}  to you under the Apache License, Version 2.0 (the
${symbol_pound}  "License"); you may not use this file except in compliance
${symbol_pound}  with the License.  You may obtain a copy of the License at
${symbol_pound}  
${symbol_pound}         http://www.apache.org/licenses/LICENSE-2.0
${symbol_pound}         
${symbol_pound}  Unless required by applicable law or agreed to in writing,
${symbol_pound}  software distributed under the License is distributed on an
${symbol_pound}  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
${symbol_pound}  KIND, either express or implied.  See the License for the
${symbol_pound}  specific language governing permissions and limitations
${symbol_pound}  under the License.





${symbol_pound}isis.services.eventbus.implementation=guava
isis.services.eventbus.implementation=axon


${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}
${symbol_pound}
${symbol_pound} MetaModel
${symbol_pound}
${symbol_pound} The metamodel typically does not require additional configuration, although
${symbol_pound} the system components (defined above) may refine the metamodel for their needs.
${symbol_pound}
${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}


${symbol_pound}
${symbol_pound} Additional programming model facet factories, or remove standard facet factories.
${symbol_pound} Comma separated list of fully qualified class names.
${symbol_pound}
${symbol_pound}isis.reflector.facets.include=
${symbol_pound}isis.reflector.facets.exclude=


${symbol_pound}
${symbol_pound} Metamodel validation (in addition to that automatically performed by the programming model facet factories)
${symbol_pound} Default implementation does nothing.
${symbol_pound}
${symbol_pound} Use a custom implementation to enforce additional constraints specific to your app/project/company.
${symbol_pound}
${symbol_pound}isis.reflector.validator=org.apache.isis.core.metamodel.metamodelvalidator.dflt.MetaModelValidatorDefault



${symbol_pound}
${symbol_pound} Whether to allow deprecated annotations/method prefixes (otherwise raise metamodel validation errors).
${symbol_pound} If not specified, default is to allow.
${symbol_pound}
isis.reflector.validator.allowDeprecated=false


${symbol_pound}
${symbol_pound} Whether to check that JAXB view models are not abstract.  If not specified, default is to validate.
${symbol_pound}
${symbol_pound}isis.reflector.validator.jaxbViewModelNotAbstract=true

${symbol_pound}
${symbol_pound} Whether to check that JAXB view models are not inner classes.  If not specified, default is to validate.
${symbol_pound}
${symbol_pound}isis.reflector.validator.jaxbViewModelNotInnerClass=true

${symbol_pound}
${symbol_pound} Whether to check that JAXB view models have no-arg constructors.  If not specified, default is NOT to validate.
${symbol_pound}
${symbol_pound}isis.reflector.validator.jaxbViewModelNoArgConstructor=false

${symbol_pound}
${symbol_pound} Whether to check that, for JAXB view model with properties referencing persistent entities, that those entities
${symbol_pound} are annotated with @XmlJavaTypeAdapter.  If not specified, default is to validate.
${symbol_pound}
${symbol_pound}isis.reflector.validator.jaxbViewModelReferenceTypeAdapter=true

${symbol_pound}
${symbol_pound} Whether to check that, for JAXB view model with date/time properties, that those properties are annotated with
${symbol_pound} @XmlJavaTypeAdapter.  If not specified, default is to validate.
${symbol_pound}
${symbol_pound}isis.reflector.validator.jaxbViewModelDateTimeTypeAdapter=true


${symbol_pound}
${symbol_pound} Whether to validate JDOQL clauses.  If not specified, default is to validate.
${symbol_pound}
${symbol_pound}isis.reflector.validator.jdoqlFromClause=true
${symbol_pound}isis.reflector.validator.jdoqlVariablesClause=true


${symbol_pound}
${symbol_pound} Whether to only allow hideXxx() and disableXxx() methods with no params.
${symbol_pound} If not specified, defaults to false (ie will also search for methods with parameter types matching the action).
${symbol_pound}
isis.reflector.validator.noParamsOnly=true


${symbol_pound}
${symbol_pound} Whether to require the object type to be specified explicitly for entities.
${symbol_pound} If not specified, defaults to false
${symbol_pound}
isis.reflector.validator.explicitObjectType=true


${symbol_pound}
${symbol_pound} Whether to ignore or honour (at least some of the) deprecated annotations/method prefixes.
${symbol_pound} If not specified, default is to honour
${symbol_pound}
${symbol_pound}isis.reflector.facets.ignoreDeprecated=false


${symbol_pound}
${symbol_pound} Whether to enforce the rule that domain services can only declare actions, not properties and collections.
${symbol_pound} If not specified, defaults to false
${symbol_pound}
isis.reflector.validator.serviceActionsOnly=true


${symbol_pound}
${symbol_pound} Whether to use only mixins, and no contributed services.
${symbol_pound} If not specified, defaults to false
${symbol_pound}
isis.reflector.validator.mixinsOnly=true




${symbol_pound}
${symbol_pound} patterns for applying CssClassFa facet (font-awesome icons), matching on action names
${symbol_pound}
isis.reflector.facet.cssClassFa.patterns=${symbol_escape}
                        new.*:fa-plus,${symbol_escape}
                        add.*:fa-plus-square,${symbol_escape}
                        create.*:fa-plus,${symbol_escape}
                        update.*:fa-edit,${symbol_escape}
                        delete.*:fa-trash,${symbol_escape}
                        save.*:fa-floppy-o,${symbol_escape}
                        change.*:fa-edit,${symbol_escape}
                        edit.*:fa-pencil-square-o,${symbol_escape}
                        maintain.*:fa-edit,${symbol_escape}
                        remove.*:fa-minus-square,${symbol_escape}
                        copy.*:fa-copy,${symbol_escape}
                        move.*:fa-exchange,${symbol_escape}
                        first.*:fa-star,${symbol_escape}
                        find.*:fa-search,${symbol_escape}
                        lookup.*:fa-search,${symbol_escape}
                        search.*:fa-search,${symbol_escape}
                        view.*:fa-search,${symbol_escape}
                        clear.*:fa-remove,${symbol_escape}
                        previous.*:fa-step-backward,${symbol_escape}
                        next.*:fa-step-forward,${symbol_escape}
                        list.*:fa-list, ${symbol_escape}
                        all.*:fa-list, ${symbol_escape}
                        download.*:fa-download, ${symbol_escape}
                        upload.*:fa-upload, ${symbol_escape}
                        export.*:fa-download,${symbol_escape}
                        switch.*:fa-exchange,${symbol_escape}
                        import.*:fa-upload,${symbol_escape}
                        execute.*:fa-bolt, ${symbol_escape}
                        run.*:fa-bolt, ${symbol_escape}
                        calculate.*:fa-calculator, ${symbol_escape}
                        verify.*:fa-check-circle, ${symbol_escape}
                        refresh.*:fa-refresh, ${symbol_escape}
                        install.*:fa-wrench,${symbol_escape}
                        stop.*:fa-stop,${symbol_escape}
                        terminate.*:fa-stop,${symbol_escape}
                        cancel.*:fa-stop,${symbol_escape}
                        discard.*:fa-trash-o,${symbol_escape}
                        pause.*:fa-pause,${symbol_escape}
                        suspend.*:fa-pause,${symbol_escape}
                        resume.*:fa-play,${symbol_escape}
                        renew.*:fa-repeat,${symbol_escape}
                        reset.*:fa-repeat,${symbol_escape}
                        categorise.*:fa-folder-open-o,${symbol_escape}
                        assign.*:fa-hand-o-right,${symbol_escape}
                        approve.*:fa-thumbs-o-up,${symbol_escape}
                        decline.*:fa-thumbs-o-down


${symbol_pound}
${symbol_pound} patterns for applying CssClass facet (CSS styles), matching on member names
${symbol_pound}
isis.reflector.facet.cssClass.patterns=${symbol_escape}
                        delete.*:btn-danger,${symbol_escape}
                        discard.*:btn-warning,${symbol_escape}
                        remove.*:btn-warning


${symbol_pound}
${symbol_pound} Whether actions require @Action annotation to be recognised
${symbol_pound}
isis.reflector.explicitAnnotations.action=true

${symbol_pound}
${symbol_pound} whether to suppress posting of events if not specified (left as Xxx.Default); defaults to true
${symbol_pound}

${symbol_pound}isis.reflector.facet.actionAnnotation.domainEvent.postForDefault=false
${symbol_pound}isis.reflector.facet.collectionAnnotation.domainEvent.postForDefault=false
${symbol_pound}isis.reflector.facet.propertyAnnotation.domainEvent.postForDefault=false

${symbol_pound}isis.reflector.facet.domainObjectLayoutAnnotation.cssClassUiEvent.postForDefault=false
${symbol_pound}isis.reflector.facet.domainObjectLayoutAnnotation.iconUiEvent.postForDefault=false
${symbol_pound}isis.reflector.facet.domainObjectLayoutAnnotation.titleUiEvent.postForDefault=false

${symbol_pound}isis.reflector.facet.domainObjectAnnotation.createdLifecycleEvent.postForDefault=false
${symbol_pound}isis.reflector.facet.domainObjectAnnotation.persistingLifecycleEvent.postForDefault=false
${symbol_pound}isis.reflector.facet.domainObjectAnnotation.persistedLifecycleEvent.postForDefault=false
${symbol_pound}isis.reflector.facet.domainObjectAnnotation.loadedLifecycleEvent.postForDefault=false
${symbol_pound}isis.reflector.facet.domainObjectAnnotation.updatingLifecycleEvent.postForDefault=false
${symbol_pound}isis.reflector.facet.domainObjectAnnotation.updatedLifecycleEvent.postForDefault=false
${symbol_pound}isis.reflector.facet.domainObjectAnnotation.removingLifecycleEvent.postForDefault=false

${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}
${symbol_pound}
${symbol_pound} Domain Service configuration
${symbol_pound}
${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}

${symbol_pound}
${symbol_pound} required by EmailServiceDefault
${symbol_pound}
${symbol_pound}isis.service.email.sender.address=some.valid@email.address
${symbol_pound}isis.service.email.sender.password=the.password.for-isis.service.email.sender.address


${symbol_pound}
${symbol_pound} whether ExceptionRecognizers should also log any recognized exceptions
${symbol_pound} (default false; enable for diagnostics/debugging)
${symbol_pound}
${symbol_pound}isis.services.exceprecog.logRecognizedExceptions=true


${symbol_pound}
${symbol_pound} disable to (automatically registered) ExceptionRecognizerCompositeForJdoObjectStore service
${symbol_pound} almost all of this service should be registered.  Since all exception recognizer implementations
${symbol_pound} are consulted in the event of an exception, it's not sufficient to override the implementation
${symbol_pound} (in isis.services); instead this configuration property disables this particular implementation.
${symbol_pound}
${symbol_pound}isis.services.ExceptionRecognizerCompositeForJdoObjectStore.disable=true


${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}
${symbol_pound}
${symbol_pound} Auditing, Commands, Publishing
${symbol_pound}
${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}

${symbol_pound}
${symbol_pound} Whether changes to objects should be audited; if not set, defaults to "none"
${symbol_pound} - if not set or set to "none", can explicitly enable using @DomainObject(auditing=Auditing.ENABLED)
${symbol_pound} - if set to "all", can explicitly disable using @DomainObject(auditing=Auditing.DISABLED)
${symbol_pound}
${symbol_pound}isis.services.audit.objects=all|none
isis.services.audit.objects=all


${symbol_pound}
${symbol_pound} Whether all (or all non-query only) actions should be reified as commands; if not set, defaults to "none"
${symbol_pound} - if not set or set to "none", can explicitly enable using @Action(command=CommandReification.ENABLED)
${symbol_pound} - if set to "all", can explicitly disable using @Action(command=CommandReification.DISABLED)
${symbol_pound}
${symbol_pound}isis.services.command.actions=all|none|ignoreSafe
isis.services.command.actions=ignoreSafe


${symbol_pound}
${symbol_pound} Whether property edits should be reified into commands; if not set, defaults to "none"
${symbol_pound} - if not set or set to "none", can explicitly enable using @Property(command=CommandReification.ENABLED)
${symbol_pound} - if set to "all", can explicitly disable using @Property(command=CommandReification.DISABLED)
${symbol_pound}
${symbol_pound}isis.services.command.properties=all|none
isis.services.command.properties=all



${symbol_pound}
${symbol_pound} Whether changes to objects should be published; if not set, defaults to "none"
${symbol_pound} - if not set or set to "none", can explicitly enable using @DomainObject(publishing=Publishing.ENABLED)
${symbol_pound} - if set to "all", can explicitly disable using @Object(publishing=Publishing.DISABLED)
${symbol_pound}
${symbol_pound}isis.services.publish.objects=all|none
isis.services.publish.objects=all


${symbol_pound}
${symbol_pound} Whether all (or all non-query only) action invocations should be published; if not set, defaults to "none"
${symbol_pound} - if not set or set to "none", can explicitly enable using @Action(publishing=Publishing.ENABLED)
${symbol_pound} - if set to "all", can explicitly disable using @Action(publishing=Publishing.DISABLED)
${symbol_pound}
${symbol_pound}isis.services.publish.actions=all|none|ignoreSafe
isis.services.publish.actions=all


${symbol_pound}
${symbol_pound} Whether all property edits sshould be published; if not set, defaults to "none"
${symbol_pound} - if not set or set to "none", can explicitly enable using @Property(publishing=Publishing.ENABLED)
${symbol_pound} - if set to "all", can explicitly disable using @Property(publishing=Publishing.DISABLED)
${symbol_pound}
${symbol_pound}isis.services.publish.properties=all|none
isis.services.publish.properties=all



${symbol_pound}
${symbol_pound} Whether the ApplicationFeatureRepository should eagerly initialize itself (increasing start-up times)
${symbol_pound} or initialize itself lazily.  Default is lazy initialization.
${symbol_pound}
${symbol_pound}isis.services.applicationFeatures.init=lazy|eager


${symbol_pound}
${symbol_pound} Whether the framework supports inject...() and set...() styles of dependency injection.   By default the former
${symbol_pound} is disabled, the latter is enabled.  Disabling these settings can reduce application start-up times.
${symbol_pound}
${symbol_pound}isis.services.injector.injectPrefix=false|true
${symbol_pound}isis.services.injector.setPrefix=false|true
isis.services.injector.setPrefix=false




${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}
${symbol_pound}
${symbol_pound} Policies
${symbol_pound}
${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}

${symbol_pound}
${symbol_pound} Whether editing of object properties is allowed; if not set, defaults to "true"
${symbol_pound} - if not set or set to "true", can explicitly disable using @DomainObject(editing=Editing.DISABLED)
${symbol_pound} - if set to "false", can explicitly enable using @DomainObject(editing=Editing.ENABLED)
${symbol_pound}
${symbol_pound}isis.objects.editing=true|false
isis.objects.editing=false



${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}
${symbol_pound}
${symbol_pound} i18n
${symbol_pound}
${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}

${symbol_pound}
${symbol_pound} force read translations, even if running in prototype mode
${symbol_pound}
${symbol_pound}isis.services.translation.po.mode=read



${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}
${symbol_pound}
${symbol_pound} Viewer defaults
${symbol_pound}
${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}

${symbol_pound}
${symbol_pound} Specify viewer defaults
${symbol_pound} 
${symbol_pound}isis.viewers.paged.standalone=30
${symbol_pound}isis.viewers.paged.parented=10


${symbol_pound}isis.viewers.propertyLayout.labelPosition=LEFT
${symbol_pound}isis.viewers.parameterLayout.labelPosition=LEFT


${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}
${symbol_pound}
${symbol_pound} Value facet defaults
${symbol_pound}
${symbol_pound} (see also viewer-specific config files, eg viewer_wicket.properties)
${symbol_pound}
${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}

${symbol_pound} as used by @Title of a date
isis.value.format.date=dd-MM-yyyy



